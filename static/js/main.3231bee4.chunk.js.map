{"version":3,"sources":["components/Container/Container.module.css","components/GradesBtn/GradesBtn.module.css","components/Notification/Notification.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/Statistics/StatisticsItem.jsx","components/Statistics/Total.jsx","components/PositiveFb/PositiveFb.js","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","StatisticsItem","good","neutral","bad","Total","total","PositiveFb","positivePercentage","Statistics","useState","visible","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","button","charAt","toUpperCase","slice","Notification","message","notification","App","setGood","setNeutral","setBad","countTotalFeedback","reduce","sum","controls","Object","keys","event","target","prevState","Math","round","countPositiveFeedbackPercentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3231bee4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__23Rt1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"GradesBtn_button__3bO4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3KHfM\"};","import s from './Container.module.css'\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>\r\n}\r\n\r\nexport default Container\r\n","const Section = ({ children, title }) => {\r\n  return (\r\n    <section>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Section\r\n","import PropTypes from 'prop-types'\r\n\r\nconst StatisticsItem = ({ good, neutral, bad }) => {\r\n  return (\r\n    <>\r\n      <li>\r\n        <p>\r\n          Goog: <span>{good}</span>\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Neutral: <span>{neutral}</span>\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Bad: <span>{bad}</span>\r\n        </p>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\nStatisticsItem.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default StatisticsItem\r\n","import PropTypes from 'prop-types'\r\n\r\nconst Total = ({ total }) => {\r\n  return (\r\n    <>\r\n      <li>\r\n        <p>\r\n          Total: <span>{total}</span>\r\n        </p>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\nTotal.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Total\r\n","import React from 'react'\r\n\r\nconst PositiveFb = ({ positivePercentage }) => {\r\n  return <p>Positive: {positivePercentage}%</p>\r\n}\r\nexport default PositiveFb\r\n","import { useState } from 'react'\r\nimport StatisticsItem from './StatisticsItem'\r\nimport Total from './Total'\r\nimport PositiveFb from '../PositiveFb/PositiveFb'\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  const [visible, stVisible] = useState(false)\r\n  return (\r\n    <div>\r\n      {total === 0 ? (\r\n        visible\r\n      ) : (\r\n        <ul>\r\n          <StatisticsItem good={good} neutral={neutral} bad={bad} />\r\n          <Total total={total} />\r\n          <PositiveFb positivePercentage={positivePercentage} />\r\n        </ul>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\n//=======old class\r\n// class Statistics extends Component {\r\n//   state = {\r\n//     visible: false,\r\n//   }\r\n\r\n//   render() {\r\n//     const { good, neutral, bad, total, positivePercentage } = this.props\r\n\r\n//     return (\r\n//       <div>\r\n//         {total === 0 ? (\r\n//           this.state.visible\r\n//         ) : (\r\n//           <ul>\r\n//             <StatisticsItem good={good} neutral={neutral} bad={bad} />\r\n//             <Total total={total} />\r\n//             <PositiveFb positivePercentage={positivePercentage} />\r\n//           </ul>\r\n//         )}\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default Statistics\r\n","import s from '../GradesBtn/GradesBtn.module.css'\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map((option) => (\r\n        <button\r\n          key={option}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n          className={s.button}\r\n        >\r\n          {option.charAt(0).toUpperCase() + option.slice(1)}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FeedbackOptions\r\n","import s from './Notification.module.css'\r\n\r\nfunction Notification({ message }) {\r\n  return <div className={s.notification}>{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","import { useState } from 'react'\r\n\r\nimport Container from './components/Container/Container'\r\nimport Section from './components/Section/Section'\r\nimport Statistics from './components/Statistics/Statistics'\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions'\r\nimport Notification from './components/Notification/Notification'\r\n\r\nfunction App() {\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n\r\n  const handleIncrement = (event) => {\r\n    const { name } = event.target\r\n\r\n    // eslint-disable-next-line default-case\r\n    switch (name) {\r\n      case 'good':\r\n        setGood((prevState) => prevState + 1)\r\n        break\r\n      case 'neutral':\r\n        setNeutral((prevState) => prevState + 1)\r\n        break\r\n      case 'bad':\r\n        setBad((prevState) => prevState + 1)\r\n        break\r\n    }\r\n  }\r\n\r\n  const countTotalFeedback = () => {\r\n    const sum = [good, neutral, bad]\r\n    return sum.reduce((total, sum) => total + sum, 0)\r\n  }\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const sum = countTotalFeedback()\r\n    return sum === 0 ? 0 : Math.round((good / sum) * 100)\r\n  }\r\n\r\n  const controls = Object.keys({ good, neutral, bad })\r\n\r\n  return (\r\n    <Container>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions options={controls} onLeaveFeedback={handleIncrement} />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {!countTotalFeedback() ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        )}\r\n      </Section>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n//==========oldClass\r\n// class App extends Component {\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   }\r\n\r\n//   handleIncrement = (e) => {\r\n//     const name = e.target.name\r\n\r\n//     this.setState((prevState) => ({\r\n//       [name]: prevState[name] + 1,\r\n//     }))\r\n//   }\r\n\r\n//   countTotalFeedback = () => {\r\n//     const { good, neutral, bad } = this.state\r\n//     const sum = [good, neutral, bad]\r\n//     return sum.reduce((total, sum) => total + sum, 0)\r\n//   }\r\n\r\n//   countPositiveFeedbackPercentage = () => {\r\n//     const { good } = this.state\r\n\r\n//     const sum = this.countTotalFeedback()\r\n\r\n//     return sum === 0 ? 0 : Math.round((good / sum) * 100)\r\n//   }\r\n\r\n//   render() {\r\n//     const controls = Object.keys(this.state)\r\n//     const { good, neutral, bad } = this.state\r\n\r\n//     console.log(controls)\r\n\r\n//     return (\r\n//       <Container>\r\n//         <Section title=\"Please leave feedback\">\r\n//           <FeedbackOptions\r\n//             options={controls}\r\n//             onLeaveFeedback={this.handleIncrement}\r\n//           />\r\n//         </Section>\r\n//         <Section title=\"Statistics\">\r\n//           {!this.countTotalFeedback() ? (\r\n//             <Notification message=\"No feedback given\" />\r\n//           ) : (\r\n//             <Statistics\r\n//               good={good}\r\n//               neutral={neutral}\r\n//               bad={bad}\r\n//               total={this.countTotalFeedback()}\r\n//               positivePercentage={this.countPositiveFeedbackPercentage()}\r\n//             />\r\n//           )}\r\n//         </Section>\r\n//       </Container>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport 'modern-normalize/modern-normalize.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}